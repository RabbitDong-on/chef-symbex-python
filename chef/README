This is Python 2.7.3, modified to be run in a Chef environment
==============================================================

All Chef-related additions are Copyright (c) EPFL 2014 and distributed
under the MIT license.  See the file "LICENSE" for the general Python
license terms.


Building a Chef-adapted Python binary
-------------------------------------

Configure with symbolic execution and optimizations enabled:

$ ./configure [--enable-symbex] [--enable-symbex-opt[=OPT[,OPT[,...]]]] [--prefix=<path>] ...

where OPT can be one of the following:
  all       - All optimizations enabled (default)
  none      - No optimization enabled
  concrbuff - Memory buffer concretization
  intern    - Interning elimination
  hashes    - Hash neutralization
  fastpath  - Fast path elimination

Then build as normal (make && make install).

When the "--enable-symbex" flag is set during configuration, the
resulting Python binary receives an additional "-Y" flag which
activates the dynamic instrumentation.  Alternatively, the same can be
achieved by setting the "PYTHONSYMBEX" environment variable.
  

Setting up the Chef environment
-------------------------------

We evaluated the Chef-obtained Python engine in a separate Python
virtualenv.  The binaries + the virtualenv are set up automatically
using the "Makefile.chef" file.

We assume the following project structure for setting up Chef:

$CHEF_ROOT
  - s2e (S2E + the Chef core)
  - python-src (the Python code base -- this tree)
  - python-build (the built Python binaries and virtual environment)


In the $CHEF_ROOT/python-build directory, run the following command:

$ make -f ../python-src/Makefile.chef

Activate the resulting Python environment using:

$ source $CHEF_ROOT/python-build/python-env/bin/activate

The environment includes all the optimization configurations used in
the paper.  To select a particular optimization, set the
"PYTHONSYMBEXOPT" environment variable before invoking the Python
executable:

$ PYTHONSYMBEXOPT=0 python -c 'print "hi"'

The optimization numbers go from 0 (no optimizations) to 4 (all
optimizations).
