#
# Copyright (C) 2014 EPFL.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


# This Makefile helps set up automatically the Chef Python evaluation
# environment.  The advantage over writing a shell script is the more
# intuitive breakdown into pieces and out-of-the box support for
# parallel jobs.


PYTHONCHEF := $(dir $(lastword $(MAKEFILE_LIST)))
PYTHONSRC := $(PYTHONCHEF)/..
PYTHONBIN_PREFIX := $(realpath .)/python-bin

CHEF_INSTRUMENT := $(realpath $(PYTHONCHEF))/instrument/build/ChefInstrument/ChefInstrument.so
CFLAGS_INSTRUMENT := -Xclang -load -Xclang $(CHEF_INSTRUMENT)

VIRTUALENV := virtualenv-1.10.1

CC := clang
CXX := clang++
CFLAGS := -march=i586 $(CFLAGS_INSTRUMENT)

python_configure = mkdir -p $(1) && cd $(1) && \
                    ../$(PYTHONSRC)/configure CC="$(CC)" CXX="$(CXX)" CFLAGS="$(CFLAGS)" \
                           --with-system-ffi \
                           --enable-symbex \
                           --enable-symbex-opt=$(2) \
                           --prefix=$(PYTHONBIN_PREFIX)

PYTHON_CONFIGURATIONS := python-opt0-none python-opt4-all

.PHONY: all env clean $(PYTHON_CONFIGURATIONS)

all: env

clean:
	rm -rf stamps/
	rm -rf $(PYTHON_CONFIGURATIONS)

# Python configurations
#######################

python-opt0-none/Makefile:
	$(call python_configure,python-opt0-none,none)

python-opt1-concrbuff/Makefile:
	$(call python_configure,python-opt1-concrbuff,"concrbuff")

python-opt2-intern/Makefile:
	$(call python_configure,python-opt2-intern,"concrbuff,intern")

python-opt3-hashes/Makefile:
	$(call python_configure,python-opt3-hashes,"concrbuff,intern,hashes")

python-opt4-all/Makefile:
	$(call python_configure,python-opt4-all,all)

# Python builds
###############

$(PYTHON_CONFIGURATIONS): %: %/Makefile
	$(MAKE) -C $*

# Python install
python-bin: python-opt4-all/python
	test -d python-bin || $(MAKE) -C python-opt4-all install


# The virtualenv
################

$(VIRTUALENV).tar.gz:
	wget --no-check-certificate https://pypi.python.org/packages/source/v/virtualenv/$(VIRTUALENV).tar.gz

$(VIRTUALENV)/setup.py: $(VIRTUALENV).tar.gz
	tar -xzvf $(VIRTUALENV).tar.gz
	touch $@ # Without this, make doesn't seem to recognize the task as done

env: stamps/virtualenv-create

stamps/virtualenv-install: $(PYTHON_CONFIGURATIONS) python-bin $(VIRTUALENV)/setup.py
	cd $(VIRTUALENV) && ../python-bin/bin/python setup.py install
	mkdir -p stamps && touch $@

stamps/virtualenv-create: stamps/virtualenv-install
	python-bin/bin/virtualenv python-env
	cp python-opt0-none/python python-env/bin/python-opt0-none
	# cp python-opt1-concrbuff/python python-env/bin/python-opt1-concrbuff
	# cp python-opt2-intern/python python-env/bin/python-opt2-intern
	# cp python-opt3-hashes/python python-env/bin/python-opt3-hashes
	cp python-opt4-all/python python-env/bin/python-opt4-all
	cp $(PYTHONCHEF)/python-switcher.sh python-env/bin/python
	mkdir -p stamps && touch $@

# Local Variables:
# mode: makefile-gmake
# End:
